# vim: set sw=4 sta et :

channel: ttl
generator: pow
ntupledir: /hadoop/store/user/matze/ttH/v42
# ntupledir: /scratch365/mwolf3/ttH/v32
outdir: ~/www/ttH/v42/ttl_2017-03-05
mvadir: data/bdt
histformat: "{v}_{c}_{p}"

lumi: 35900

plot:
  - collisions_single
  - fakes_single
  # - ttH_125_signal
  - ttH2Nonbb_125_amc
  # - ttH2ZZ_125_amc
  # - ttH2WW_125_amc
  # - ttH2TT_125_amc
  - ttjets_pow
  - ttW
  - ttZ
  - ewk
  - rares
  # - singletop

limits:
  - collisions_single
  - fakes_single
  - ttH2ZZ_125_amc
  - ttH2WW_125_amc
  - ttH2TT_125_amc
  - ttjets_pow
  - ttW
  - ttZ
  - ewk
  - rares

discriminants:
  - NumInclusiveJets
  - TT_VisibleMass
  - TMVA5
  - TMVA6
  - TMVA7
  - TMVA8
  - TMVA10
  - TMVA_fine

baseline cuts:
    - "l ID": lepton_id == superslim::Lepton::MVA
    - "τ ID": tau_id == superslim::Tau::IsoMVA03
    - "l trigger": >
        (leptons[0].electron() and
         event.trigger().accepted({
             "HLT_Ele25_eta2p1_WPTight_Gsf_v",
             "HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_SingleL1_v",
             "HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau20_v",
             "HLT_Ele24_eta2p1_WPLoose_Gsf_LooseIsoPFTau30_v"
         })) or
        (leptons[0].muon() and
         event.trigger().accepted({
             "HLT_IsoMu22_v",
             "HLT_IsoTkMu22_v",
             "HLT_IsoMu22_eta2p1_v",
             "HLT_IsoTkMu22_eta2p1_v",
             "HLT_IsoMu19_eta2p1_LooseIsoPFTau20_SingleL1_v"
         }))
    - "bad μ": >
        event.nBadMuons() == 0
    - "ll mass": >
        not event.dileptonVeto()
    - "l pt": >
        (leptons[0].electron() and leptons[0].pt() > 25) or
        (leptons[0].muon() and leptons[0].pt() > 20)
    - "l η": >
        std::abs(leptons[0].eta()) <= 2.1
    - "1 l": >
        std::count_if(leptons.begin(), leptons.end(), [](const superslim::Lepton& l) { return l.mva() >= superslim::id::Loose; }) <= 1
    - "jets": >
        len(jets) >= 3 and
        (btags(jets) >= 1 or btags(jets, true) >= 2)
    - "τ pT": >
        taus.size() >= 2 and
        taus[0].pt() >= 30 and taus[1].pt() >= 20
    - "τ OS": >
        taus[0].charge() * taus[1].charge() < 0

fake cuts:
    - "fake": >
        leptons[0].mva() < superslim::id::Loose or
        std::count_if(taus.begin(), taus.end(), [](const superslim::Tau& t) { return t.isolationMVA03() >= superslim::id::Tight; }) <= 1
    - "MC truth": >
        taus[0].match() < 6 and taus[1].match() < 6 and (
            (leptons[0].electron() and (leptons[0].match() == 1 or leptons[0].match() == 3)) or
            (leptons[0].muon() and (leptons[0].match() == 2 or leptons[0].match() == 4))
        )

fake weights:
  - Generator
  - CSVWeight
  - PUWeight
  - LeptonSF
  - TriggerSF
  - tauIdEff
  - Fake

signal cuts:
    - "l quality": >
        leptons[0].mva() >= superslim::id::Loose
    - "τ quality": >
        std::count_if(taus.begin(), taus.end(), [](const superslim::Tau& t) { return t.isolationMVA03() >= superslim::id::Tight; }) >= 2
    - "MC truth": >
        taus[0].match() < 6 and taus[1].match() < 6 and (
            (leptons[0].electron() and (leptons[0].match() == 1 or leptons[0].match() == 3)) or
            (leptons[0].muon() and (leptons[0].match() == 2 or leptons[0].match() == 4))
        )

signal weights:
  - Generator
  - CSVWeight
  - PUWeight
  - LeptonSF
  - TriggerSF
  - tauIdEff

data fake cuts:
    - "fake": >
        leptons[0].mva() < superslim::id::Loose or
        std::count_if(taus.begin(), taus.end(), [](const superslim::Tau& t) { return t.isolationMVA03() >= superslim::id::Tight; }) <= 1

data fake weights:
  - Fake

data signal cuts:
    - "l quality": >
        leptons[0].mva() >= superslim::id::Loose
    - "τ quality": >
        std::count_if(taus.begin(), taus.end(), [](const superslim::Tau& t) { return t.isolationMVA03() >= superslim::id::Tight; }) >= 2

data signal weights: []

# List of systematics to run when `-s` is specified
signal systematics:
  - CMS_ttHl_JES
  - CMS_ttHl_tauES
  - CMS_ttHl_btag_HF
  - CMS_ttHl_btag_HFStats1
  - CMS_ttHl_btag_HFStats2
  - CMS_ttHl_btag_LF
  - CMS_ttHl_btag_LFStats1
  - CMS_ttHl_btag_LFStats2
  - CMS_ttHl_btag_cErr1
  - CMS_ttHl_btag_cErr2
  - CMS_ttHl_thu_shape_ttH_x1
  - CMS_ttHl_thu_shape_ttH_y1
  - CMS_ttHl_thu_shape_ttW_x1
  - CMS_ttHl_thu_shape_ttW_y1
  - CMS_ttHl_thu_shape_ttZ_x1
  - CMS_ttHl_thu_shape_ttZ_y1

fake systematics:
  - CMS_ttHl_FRjt_norm
  - CMS_ttHl_FRjt_shape

data fake systematics:
  - CMS_ttHl_FRjt_norm
  - CMS_ttHl_FRjt_shape

categories:
  - inclusive: ""
