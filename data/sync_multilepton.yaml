# vim: set sw=4 sta et :

channel: tll
ntupledir: test/sync_multilepton
outdir: test/sync_multilepton/out
histformat: "{p}_{c}_{v}_TLL"
mode: sync

lumi: 1

plot:
  - ttH
  - ttH_signal
  - ttH_mva
  - ttH_os

cuts:
    default:
        - "e/μ quality": "lepton_id == superslim::Lepton::MVA"
        - "τ quality": "tau_id == superslim::Tau::IsoMVA03"
    signal:
        - "e/μ quality": "lepton_id == superslim::Lepton::MVA"
        - "τ quality": "tau_id == superslim::Tau::IsoMVA03"
        - "ss": "leptons[0].charge() * leptons[1].charge() > 0"
        - "e/μ pt": >
            leptons[0].pt() > (leptons[0].electron() ? 25 : 20) and
            leptons[1].pt() > (leptons[1].electron() ? 15 : 10)
        - "dilepton mass": >
            (leptons[0].p4() + leptons[1].p4()).M() > 12
        - "e/μ quality": >
            (lepton_id == superslim::Lepton::MVA) and
            (std::count_if(leptons.begin(), leptons.end(),
                    [](const superslim::Lepton& l) { return l.mva() >= superslim::id::Loose; }) == 2) and
            (leptons[0].mva() >= superslim::id::Loose) and
            (leptons[1].mva() >= superslim::id::Loose)
        - "Z veto": >
            not (leptons[0].electron() and leptons[1].electron() and
                 abs((leptons[0].p4() + leptons[1].p4()).M() - 91.2) < 10)
        - "metLD": >
            not (leptons[0].electron() and leptons[1].electron() and metLD(met.pt(), jets, leptons) < 0.2)
        - "charge": >
            leptons[0].consistentCharge() and leptons[1].consistentCharge() and
            (leptons[0].muon() or (leptons[0].missingHits() == 0 and leptons[0].passesConversionVeto())) and
            (leptons[1].muon() or (leptons[1].missingHits() == 0 and leptons[1].passesConversionVeto()))
        - "Jets": "len(jets) >= 4"
        - "Tags": "btags(jets) >= 1 or btags(jets, true) >= 2"
    mva:
        - "e/μ quality": "lepton_id == superslim::Lepton::MVA"
        - "τ quality": "tau_id == superslim::Tau::IsoMVA03"
        - "ss": "leptons[0].charge() * leptons[1].charge() > 0"
        - "e/μ pt": >
            leptons[0].pt() > (leptons[0].electron() ? 25 : 20) and
            leptons[1].pt() > (leptons[1].electron() ? 15 : 10)
        - "dilepton mass": >
            (leptons[0].p4() + leptons[1].p4()).M() > 12
        - "e/μ quality": >
            (lepton_id == superslim::Lepton::MVA) and
            (std::count_if(leptons.begin(), leptons.end(),
                    [](const superslim::Lepton& l) { return l.mva() >= superslim::id::Loose; }) == 1) and
            (std::count_if(leptons.begin(), leptons.end(),
                    [](const superslim::Lepton& l) { return l.fakeable() >= superslim::id::Loose; }) == 1) and
            (leptons[0].fakeable() >= superslim::id::Loose) != (leptons[1].fakeable() >= superslim::id::Loose)
        - "Z veto": >
            not (leptons[0].electron() and leptons[1].electron() and
                 abs((leptons[0].p4() + leptons[1].p4()).M() - 91.2) < 10)
        - "metLD": >
            not (leptons[0].electron() and leptons[1].electron() and metLD(met.pt(), jets, leptons) < 0.2)
        - "charge": >
            leptons[0].consistentCharge() and leptons[1].consistentCharge() and
            (leptons[0].muon() or (leptons[0].missingHits() == 0 and leptons[0].passesConversionVeto())) and
            (leptons[1].muon() or (leptons[1].missingHits() == 0 and leptons[1].passesConversionVeto()))
        - "Jets": "len(jets) >= 4"
        - "Tags": "btags(jets) >= 1 or btags(jets, true) >= 2"
    os:
        - "e/μ quality": "lepton_id == superslim::Lepton::MVA"
        - "τ quality": "tau_id == superslim::Tau::IsoMVA03"
        - "os": "leptons[0].charge() * leptons[1].charge() < 0"
        - "e/μ pt": >
            leptons[0].pt() > (leptons[0].electron() ? 25 : 20) and
            leptons[1].pt() > (leptons[1].electron() ? 15 : 10)
        - "dilepton mass": >
            (leptons[0].p4() + leptons[1].p4()).M() > 12
        - "e/μ quality": >
            (lepton_id == superslim::Lepton::MVA) and
            (std::count_if(leptons.begin(), leptons.end(),
                    [](const superslim::Lepton& l) { return l.mva() >= superslim::id::Loose; }) == 2) and
            (leptons[0].mva() >= superslim::id::Loose) and
            (leptons[1].mva() >= superslim::id::Loose)
        - "Z veto": >
            not (leptons[0].electron() and leptons[1].electron() and
                 abs((leptons[0].p4() + leptons[1].p4()).M() - 91.2) < 10)
        - "metLD": >
            not (leptons[0].electron() and leptons[1].electron() and metLD(met.pt(), jets, leptons) < 0.2)
        - "charge": >
            leptons[0].consistentCharge() and leptons[1].consistentCharge() and
            (leptons[0].muon() or (leptons[0].missingHits() == 0 and leptons[0].passesConversionVeto())) and
            (leptons[1].muon() or (leptons[1].missingHits() == 0 and leptons[1].passesConversionVeto()))
        - "Jets": "len(jets) >= 4"
        - "Tags": "btags(jets) >= 1 or btags(jets, true) >= 2"

weights: []
systematics: NA
limits: []

categories:
    - inclusive: ""
    - 2lss ee: "nelectrons == 2"
    - 2lss em: "nelectrons == 1 && nmuons == 1"
    - 2lss mm: "nmuons == 2"
    - 2lss tau: "ntaus > 0"
