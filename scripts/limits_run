#!/bin/bash

set -x
set -e

ids=vtight
vars="TMVAlike10_likelihood TMVAlike8_tt"

tag=signal
indate=07-17
outdate=09-05
version=45

inputs=/afs/crc.nd.edu/user/m/mwolf3/www/ttH/v${version}/ttl_2017-${indate}_${tag}
dirname=/afs/crc.nd.edu/user/m/mwolf3/work/ttH/releases/CMSSW_7_4_16_patch2_combine/src/CombineHarvester/${outdate}_${tag}
fixer=/afs/crc.nd.edu/user/m/mwolf3/work/ttH/releases/CMSSW_8_0_26_patch1/src/ttH/TauRoast/scripts/fix_histos
paperdir=/afs/crc.nd.edu/user/m/mwolf3/work/notes/papers/HIG-17-018/trunk/datacards

datacards_htt="$(echo $paperdir/tth_htt/2017Jul21/*1tau*.txt)"
datacards_multilep="$(echo $paperdir/tth_multilep/cards_v7d_170716_splitdecays/*.txt)"

systematics="
CMS_ttHl_EWK_4j
CMS_ttHl_FRjt
CMS_ttHl_JES
CMS_ttHl_Rares
CMS_ttHl_btag
CMS_ttHl_fakes
CMS_ttHl_lepEff
CMS_ttHl_tauES
CMS_ttHl_tauID
CMS_ttHl_thu_shape_ttH
CMS_ttHl_thu_shape_ttW
CMS_ttHl_thu_shape_ttZ
CMS_ttHl_trigger_uncorr
QCDscale_ttH
QCDscale_ttW
QCDscale_ttZ
lumi_13TeV_2016
pdf_Higgs
pdf_gg
pdf_qqbar
"

[ -d $dirname ] && rm -rf $dirname
mkdir $dirname
cd $dirname
eval `scramv1 runtime -sh`

mydatacards=""
for var in $vars; do
   for cat in inclusive; do
      newvar=${var}_${cat}
      for id in $ids; do
         cp ${inputs}_${id}/limits.root limits_${id}.root
         $fixer limits_${id}.root $newvar
         cp limits_${id}.root limits_${id}_${newvar}.root
         workspace=ws_${newvar}_${id}.root
         datacard=${workspace%%root}txt
         WriteDatacards_1l_2tau_FRjt_syst --input_file=$PWD/limits_${id}.root --output_file=$workspace
         mydatacards="$mydatacards $datacard"
      done
   done
done

datacards="$mydatacards"
combineCards.py $(echo $datacards_htt|awk 'BEGIN{RS=" ";ORS=" "}/_2lss_/{print}') > ws_2lss1tau.txt
combineCards.py $(echo $datacards_htt|awk 'BEGIN{RS=" ";ORS=" "}/_3l_/{print}') > ws_3l1tau.txt
datacards="$datacards ws_2lss1tau.txt ws_3l1tau.txt"

for datacard in $mydatacards; do
   if [[ "$datacard" == *_tt_* ]]; then
      combineCards.py $datacard $datacards_htt > ws_combination_htt.txt
      combineCards.py $datacard $datacards_htt $datacards_multilep > ws_combination_multilep.txt
      datacards="$datacards ws_combination_htt.txt ws_combination_multilep.txt"
   fi
done

for datacard in $datacards; do
   combine -M Asymptotic -m 125 $datacard &> ${datacard%%.txt}_limit.log
   combine -M Asymptotic -m 125 -t -1 --expectSignal=1 --expectSignalMass=125 $datacard &> ${datacard%%.txt}_limit_injected.log
   # combine -M Asymptotic -m 125 --expectSignal 1 --significance --pvalue $datacard &> ${datacard%%.txt}_significance.log
   combine -M MaxLikelihoodFit -m 125 --robustFit=1 --rMin=-3 --rMax=5 $datacard &> ${datacard%%.txt}_fit.log
   if [[ $datacard == *TMVA* ]]; then
      PostFitShapes -d $datacard -o ${datacard%%.txt}_shapes.root -m 125 -f mlfit.root:fit_s --postfit --sampling --print &> ${datacard%%.txt}_shapes.log
   fi
   cp mlfit.root ${datacard%%.txt}_fit.root
   # root -b -n -q -l $CMSSW_BASE'/src/CombineHarvester/ttH_htt/macros/makePostFitPlots_1l_2tau.C("'${datacard%%.txt}'_shapes.root","'${datacard%%.txt}.pdf'")++'

   if [[ "$datacard" == *_tt_* ]]; then
     rootspace=${datacard%%.txt}_rs.root
     impacts=${datacard%%.txt}_impacts
     text2workspace.py $datacard -m 125 -o $rootspace
     combineTool.py -M Impacts -d $rootspace -m 125 --doInitialFit --robustFit 1
     combineTool.py -M Impacts -d $rootspace -m 125 --robustFit 1 --doFits --parallel 32
     combineTool.py -M Impacts -d $rootspace -m 125 -o ${impacts}.json
     plotImpacts.py -i ${impacts}.json -o ${impacts}

     for sys in $systematics; do
       newdatacard=${datacard%%.txt}_test_${sys}.txt
       cat $datacard|grep -v $sys>$newdatacard
       combine -M Asymptotic -m 125 $newdatacard &> ${newdatacard%%.txt}_limit.log
     done
   fi
done
